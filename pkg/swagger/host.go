/*
 * Host API
 *
 * API for posting hosts and waiting for hosts
 *
 * OpenAPI spec version: 1.0.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the MIT License
 */

package swagger

import (
	"time"
)

type Host struct {
	BaseInfo Waiter `json:"base_info,omitempty"`
	// Check History if requested
	Checks []*StatusCheckResult `json:"checks,omitempty"`

	// IPv4 the host is on.
	Ipv4 string `json:"ipv4,omitempty"`

	// IPv6 Address the host is on.
	Ipv6 string `json:"ipv6,omitempty"`

	// Port the host is on.
	Port uint16 `json:"port,omitempty"`

	// Whether the host can be spectated.
	Spectateable string `json:"spectateable,omitempty"`

	// Version of the game api being hosted.
	Version string `json:"version,omitempty"`

	// Privacy flags associated  with this host.
	Flags []string `json:"flags,omitempty"`

	Opponent User `json:"opponent,omitempty"`

	// Whether the opponent joined privately.
	OpPrivate bool `json:"op_private,omitempty"`
}

type StatusUpdate struct {
	LastCheckId  uint64    `json:"last_check_id"`
	Status       string    `json:"status"`
	OpponentAddr string    `json:"opponent_ip,omitempty"`
	OpponentId   uint64    `json:"opponent_id,omitempty"`
	CheckDate    time.Time `json:"check_data"`
	NewVers      *string   `json:"vers,omitempty"`
	CanSpec      *bool     `json:"spec,omitempty"`
	Prof1Name    *string   `json:"p1_prof,omitempty"`
	Prof2Name    *string   `json:"p2_prof,omitempty"`
}
